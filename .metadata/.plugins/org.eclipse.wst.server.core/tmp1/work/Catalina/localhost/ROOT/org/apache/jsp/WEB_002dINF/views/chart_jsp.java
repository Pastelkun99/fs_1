/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-11-19 05:53:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/admin/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/Fusion_1/WEB-INF/lib/spring-webmvc-4.2.4.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1450280850000L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/Fusion_1/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1573435374027L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.2.4.RELEASE.jar", Long.valueOf(1573435477950L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"data:image/x-icon;,\" type=\"image/x-icon\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/printThis/1.15.0/printThis.js\"></script>\r\n");
      out.write("<!-- <script src=\"https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap4.min.css\"></script>\r\n");
      out.write("<script src=\"https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js\"></script> -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/v/dt/dt-1.10.20/datatables.min.css\"/>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.datatables.net/v/dt/dt-1.10.20/datatables.min.js\"></script>\r\n");
      out.write("<!-- <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js\"></script> -->\r\n");
      out.write("<script src=\"resources/chart/Chart.bundle.js\"></script>\r\n");
      out.write("<script src=\"resources/chart/Chart.bundle.min.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>WebBoard - 통계 페이지</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t    $('#logTable').DataTable();\r\n");
      out.write("\t} );\r\n");
      out.write("</script>\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-3\"></div>\r\n");
      out.write("\t\t<div class=\"jumbotron\" style=\"text-align:center;\">\r\n");
      out.write("\t\t\t  <h2 class=\"display-4\"><strong>통계 페이지입니다.</strong></h2>\r\n");
      out.write(" \t\t\t\t <p class=\"lead\">접속자별 통계, 접속자별 브라우저 통계, 접속자별 운영체제 통계, 접속 시간별 그래프를 조회할 수 있습니다.</p>\r\n");
      out.write("  \t\t\t\t <a class=\"btn btn-danger btn-lg\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/boardList.do?page_no=1&pageSize=10\" role=\"button\">돌아가기</a>\r\n");
      out.write("  \t\t\t\t <a class=\"btn btn-dark btn-lg\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logExcelDownload.do?fromDate=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.fromDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&toDate=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.toDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" role=\"button\">엑셀 다운로드</a>\r\n");
      out.write("  \t\t\t\t <button type=\"button\" class=\"btn btn-warning btn-lg\" id=\"printing\">데이터 테이블 인쇄</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-3\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-3\"></div>\r\n");
      out.write("\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/Chart.do\" method=\"get\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"fromDate\" id=\"fromDate\" placeholder=\"날짜를 선택해주세요\" readonly=\"readonly\" required>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"toDate\" id=\"toDate\" placeholder=\"날짜를 선택해주세요\" readonly=\"readonly\" required>\r\n");
      out.write("\t\t\t\t<input type=\"submit\" class=\"btn btn-primary\" value=\"조회\"/>\r\n");
      out.write("\t\t\t\t<input type=\"reset\" class=\"btn btn-info\" value=\"초기화\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<button class=\"btn btn-warning\" type=\"button\" onclick=\"todayButton();\">오늘</button>\r\n");
      out.write("\t\t\t<button class=\"btn btn-warning\" type=\"button\" onclick=\"yesterdayButton();\">어제</button>\r\n");
      out.write("\t\t\t<button class=\"btn btn-warning\" type=\"button\" onclick=\"lastWeekButton();\">최근 일주일</button>\r\n");
      out.write("\t\t\t<button class=\"btn btn-warning\" type=\"button\" onclick=\"lastMonthButton();\">최근 한달</button>\r\n");
      out.write("\t\t\t<button class=\"btn btn-warning\" type=\"button\" onclick=\"lastYearButton();\">최근 일년</button>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<div class=\"col-3\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-sm\"></div>\r\n");
      out.write("\t\t<p style=\"margin-left:1rem\">\r\n");
      out.write("\t\t<button class=\"btn btn-secondary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTable\" aria-expanded=\"true\" aria-controls=\"collapseTable\">\r\n");
      out.write("   \t\t\t데이터 테이블\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<button class=\"btn btn-secondary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseDate\" aria-expanded=\"false\" aria-controls=\"collapseDate\">\r\n");
      out.write("    \t\t날짜별 접속자 수\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<button class=\"btn btn-secondary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTotal\" aria-expanded=\"false\" aria-controls=\"collapseTotal\">\r\n");
      out.write("    \t\t날짜별 시간대 접속자 수\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<button class=\"btn btn-secondary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseWeek\" aria-expanded=\"false\" aria-controls=\"collapseWeek\">\r\n");
      out.write("    \t\t요일별 접속자 수\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<button class=\"btn btn-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseUser\" aria-expanded=\"false\" aria-controls=\"collapseUser\">\r\n");
      out.write("    \t\t유저별 그래프\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<button class=\"btn btn-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOS\" aria-expanded=\"false\" aria-controls=\"collapseOS\">\r\n");
      out.write("    \t\t운영체제별 그래프\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<button class=\"btn btn-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseBrowser\" aria-expanded=\"false\" aria-controls=\"collapseBrowser\">\r\n");
      out.write("    \t\t브라우저별 그래프\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t<button class=\"btn btn-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseRefer\" aria-expanded=\"false\" aria-controls=\"collapseRefer\">\r\n");
      out.write("    \t\t접속경로별 그래프\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<div class=\"col-sm\"> </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-8\" style=\"margin-left:10px\">\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseTable\">\r\n");
      out.write("\t\t\t<h5 style=\"text-align:center;\">조건에 따른 데이터 테이블</h5>\r\n");
      out.write("\t\t\t<table id=\"logTable\" class=\"display\" style=\"width:100%; margin-left:20px;\">\r\n");
      out.write("\t\t\t\t<thead class=\"thead-dark\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">No</th>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">ID</th>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">Date</th>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">IP</th>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">Browser</th>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">Browser Ver.</th>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">OS</th>\r\n");
      out.write("\t\t\t\t\t\t<th scope=\"col\">Refer</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseDate\">\r\n");
      out.write("\t\t\t\t<h5 style=\"text-align: center;\">날짜별 접속자 수</h5>\r\n");
      out.write("\t\t\t\t<canvas id=\"logTimeTotalChart\" style=\"width: 700px; height: 300px;\"></canvas>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseTotal\">\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\t$('#fromDate').datepicker({\r\n");
      out.write("\t\t\t\t\tdateFormat: 'yy-mm-dd',\r\n");
      out.write("\t\t\t\t\tchangeYear: true,\r\n");
      out.write("\t\t\t\t\tchangeMonth: true,\r\n");
      out.write("\t\t\t\t\tmonthNamesShort: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월']\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$('#toDate').datepicker({\r\n");
      out.write("\t\t\t\t\tdateFormat: 'yy-mm-dd',\r\n");
      out.write("\t\t\t\t\tchangeYear: true,\r\n");
      out.write("\t\t\t\t\tchangeMonth: true,\r\n");
      out.write("\t\t\t\t\tmonthNamesShort: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월']\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t<h5 style=\"text-align: center;\"> 해당 날짜 시간별 접속자 수</h5>\r\n");
      out.write("\t\t\t<canvas id=\"logTimeChart\" style=\"width: 700px; height: 300px;\"></canvas>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseWeek\">\r\n");
      out.write("\t\t\t\t<h5 style=\"text-align:center;\">요일별 접속자 수</h5>\r\n");
      out.write("\t\t\t\t<canvas id=\"logWeekChart\" style=\"width: 700px; height: 300px;\"></canvas>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-3\">\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseUser\">\r\n");
      out.write("  \t\t\t\t<div class=\"card card-body\">\r\n");
      out.write("\t\t\t\t\t<h5 style=\"text-align: center;\">유저별 그래프</h5>\r\n");
      out.write("\t\t\t\t\t<canvas id=\"logNameChart\" style=\"width: 600px; height: 400px;\"></canvas>\r\n");
      out.write("  \t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseOS\">\r\n");
      out.write("  \t\t\t\t<div class=\"card card-body\">\r\n");
      out.write("\t\t\t\t\t<h5 style=\"text-align: center;\">운영체제별 그래프</h5>\r\n");
      out.write("\t\t\t\t\t<canvas id=\"logOSChart\" style=\"width: 600px; height: 400px;\"></canvas>\r\n");
      out.write("  \t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseBrowser\">\r\n");
      out.write("  \t\t\t\t<div class=\"card card-body\">\r\n");
      out.write("\t\t\t\t\t<h5 style=\"text-align: center;\">브라우저별 그래프</h5>\r\n");
      out.write("\t\t\t\t\t<canvas id=\"logBrowserChart\" style=\"width: 600px; height: 400px;\"></canvas>\r\n");
      out.write("  \t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"collapse show\" id=\"collapseRefer\">\r\n");
      out.write("  \t\t\t\t<div class=\"card card-body\">\r\n");
      out.write("\t\t\t\t\t<h5 style=\"text-align: center;\">접속경로별 그래프</h5>\r\n");
      out.write("\t\t\t\t\t<canvas id=\"logReferChart\" style=\"width: 600px; height: 400px;\"></canvas>\r\n");
      out.write("  \t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction goPrint(title) {\r\n");
      out.write("\t\t\tvar sw = screen.width;\r\n");
      out.write("\t\t\tvar sh = screen.height;\r\n");
      out.write("\t\t\tvar weight = 1050;\r\n");
      out.write("\t\t\tvar height = 750;\r\n");
      out.write("\t\t\tvar xpos = (sw-weight)/2;\r\n");
      out.write("\t\t\tvar ypos = (sh-height)/2;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar pHeader = \"<html><head><link rel='stylesheet' type='text/css'><title>\" + title + \"</title></head><body>\";\r\n");
      out.write("\t\t\tvar pgetContent = document.getElementById('logTable').innerHTML + '<br>';\r\n");
      out.write("\t\t\tvar pFooter = \"</body></html>\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar pContent = pHeader + pgetContent + pFooter;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar pWin = window.open(\"\", \"print\", \"width=\" + weight + \", height=\" + height + \", top=\" + ypos + \",left=\" + xpos + \", status=yes, scrollbars=yes\");\r\n");
      out.write("\t\t\tpWin.document.open();\r\n");
      out.write("\t\t\tpWin.document.write(pContent);\r\n");
      out.write("\t\t\tpWin.document.close();\r\n");
      out.write("\t\t\tpWin.print();\r\n");
      out.write("\t\t\tpWin.close();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\tfunction logDelete(log_no) {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\turl : \"/logDelete.do\",\r\n");
      out.write("\t\t\t\tdata : {\"log_no\" : log_no},\r\n");
      out.write("\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\talert('삭제가 완료되었습니다.');\r\n");
      out.write("\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(error) {\r\n");
      out.write("\t\t\t\t\talert('에러 발생');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction colorize() {\r\n");
      out.write("\t\t\tvar r = Math.floor(Math.random()*200);\r\n");
      out.write("\t\t\tvar g = Math.floor(Math.random()*200);\r\n");
      out.write("\t\t\tvar b = Math.floor(Math.random()*200);\r\n");
      out.write("\t\t\tvar color = 'rgba(' + r + ', ' + g + ', ' + b + ', 0.7)';\r\n");
      out.write("\t\t\treturn color;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 이름별 리스트 정리 시작 */\r\n");
      out.write("\t\tvar jsonData = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${json}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\tvar jsonObject = JSON.stringify(jsonData);\r\n");
      out.write("\t\tvar jData = JSON.parse(jsonObject);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar labelList = new Array();\r\n");
      out.write("\t\tvar valueList = new Array();\r\n");
      out.write("\t\tvar colorList = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i<jData.length; i++) {\r\n");
      out.write("\t\t\tvar d = jData[i];\r\n");
      out.write("\t\t\tlabelList.push(d.ID);\r\n");
      out.write("\t\t\tvalueList.push(d.Count);\r\n");
      out.write("\t\t\tcolorList.push(colorize());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data = {\r\n");
      out.write("\t\t\t\t\t\tlabels: labelList,\r\n");
      out.write("\t\t\t\t\t\tdatasets: [{\r\n");
      out.write("\t\t\t\t\t\t\t\tbackgroundColor: colorList,\r\n");
      out.write("\t\t\t\t\t\t\t\tdata : valueList\r\n");
      out.write("\t\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\t\toptions : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdisplay : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext: '유저별 접속 횟수'\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ctx1 = document.getElementById('logNameChart').getContext('2d');\r\n");
      out.write("\t\tnew Chart(ctx1, {\r\n");
      out.write("\t\t\ttype: 'pie',\r\n");
      out.write("\t\t\tdata: data\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t/* 이름별 리스트 정리 끝 */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* OS별 리스트 정리 시작 */\r\n");
      out.write("\t\tvar jsonDataOS = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonOS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\tvar jsonObjectOS = JSON.stringify(jsonDataOS);\r\n");
      out.write("\t\tvar jDataOS = JSON.parse(jsonObjectOS);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar labelListOS = new Array();\r\n");
      out.write("\t\tvar valueListOS = new Array();\r\n");
      out.write("\t\tvar colorListOS = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i<jDataOS.length; i++) {\r\n");
      out.write("\t\t\tvar o = jDataOS[i];\r\n");
      out.write("\t\t\tlabelListOS.push(o.OS);\r\n");
      out.write("\t\t\tvalueListOS.push(o.Count);\r\n");
      out.write("\t\t\tcolorListOS.push(colorize());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data2 = {\r\n");
      out.write("\t\t\t\t\t\tlabels : labelListOS,\r\n");
      out.write("\t\t\t\t\t\tdatasets: [{\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor : colorListOS,\r\n");
      out.write("\t\t\t\t\t\t\tdata : valueListOS\r\n");
      out.write("\t\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\t\toptions : {\r\n");
      out.write("\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplay : true,\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : '운영체제별 접속 횟수'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ctx2 = document.getElementById('logOSChart').getContext('2d');\r\n");
      out.write("\t\tnew Chart(ctx2, {\r\n");
      out.write("\t\t\ttype:'pie',\r\n");
      out.write("\t\t\tdata : data2\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t/* OS별 리스트 끝 */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 브라우저별 리스트 시작 */\r\n");
      out.write("\t\tvar jsonDataBrowser = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonBrowser}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\tvar jsonObjectBrowser = JSON.stringify(jsonDataBrowser);\r\n");
      out.write("\t\tvar jDataBrowser = JSON.parse(jsonObjectBrowser);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar labelListBrowser = new Array();\r\n");
      out.write("\t\tvar valueListBrowser = new Array();\r\n");
      out.write("\t\tvar colorListBrowser = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i<jDataBrowser.length; i++) {\r\n");
      out.write("\t\t\tvar b = jDataBrowser[i];\r\n");
      out.write("\t\t\tlabelListBrowser.push(b.Browser);\r\n");
      out.write("\t\t\tvalueListBrowser.push(b.Count);\r\n");
      out.write("\t\t\tcolorListBrowser.push(colorize());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data3 = {\r\n");
      out.write("\t\t\t\t\t\tlabels : labelListBrowser,\r\n");
      out.write("\t\t\t\t\t\tdatasets: [{\r\n");
      out.write("\t\t\t\t\t\t\tlabel : '접속 횟수',\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor : colorListBrowser,\r\n");
      out.write("\t\t\t\t\t\t\tdata : valueListBrowser\r\n");
      out.write("\t\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\t\toptions : {\r\n");
      out.write("\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplay : true,\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : '운영체제별 접속 횟수'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ctx3 = document.getElementById('logBrowserChart').getContext('2d');\r\n");
      out.write("\t\tnew Chart(ctx3, {\r\n");
      out.write("\t\t\ttype:'pie',\r\n");
      out.write("\t\t\tdata : data3\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t/* 브라우저별 리스트 끝 */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 시간별 리스트 시작 */\r\n");
      out.write("\t\tvar jsonDataTime = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\tvar jsonObjectTime = JSON.stringify(jsonDataTime);\r\n");
      out.write("\t\tvar jDataTime = JSON.parse(jsonObjectTime);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar labelListTime = new Array();\r\n");
      out.write("\t\tvar valueListTime = new Array();\r\n");
      out.write("\t\tvar colorListTime = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i<jDataTime.length; i++) {\r\n");
      out.write("\t\t\tvar t = jDataTime[i];\r\n");
      out.write("\t\t\tlabelListTime.push(t.DateTime);\r\n");
      out.write("\t\t\tvalueListTime.push(t.Count);\r\n");
      out.write("\t\t\tcolorListTime.push(colorize());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data4 = {\r\n");
      out.write("\t\t\t\t\t\tlabels : labelListTime,\r\n");
      out.write("\t\t\t\t\t\tdatasets: [{\r\n");
      out.write("\t\t\t\t\t\t\tlabel : '시간대별 접속자 수',\r\n");
      out.write("\t\t\t\t\t\t\tdata : valueListTime,\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor: colorListTime\r\n");
      out.write("\t\t\t\t\t\t}]\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ctx4 = document.getElementById('logTimeChart').getContext('2d');\r\n");
      out.write("\t\tnew Chart(ctx4, {\r\n");
      out.write("\t\t\ttype : 'bar',\r\n");
      out.write("\t\t\tdata : data4,\r\n");
      out.write("\t\t\toptions: {\r\n");
      out.write("\t\t\t\tscales: {\r\n");
      out.write("\t\t\t\t\tyAxes: [{\r\n");
      out.write("\t\t\t\t\t\tticks: {\r\n");
      out.write("\t\t\t\t\t\t\tbeginAtZero : true\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t/* 시간별 리스트 끝 */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 토탈 타임 리스트 시작 */\r\n");
      out.write("\t\tvar jsonDataDate = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\tvar jsonObjectDate = JSON.stringify(jsonDataDate);\r\n");
      out.write("\t\tvar jDataDate = JSON.parse(jsonObjectDate);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar labelListDate = new Array();\r\n");
      out.write("\t\tvar valueListDate = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i<jDataDate.length; i++) {\r\n");
      out.write("\t\t\tvar date = jDataDate[i];\r\n");
      out.write("\t\t\tlabelListDate.push(date.Date);\r\n");
      out.write("\t\t\tvalueListDate.push(date.Count);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data5 = {\r\n");
      out.write("\t\t\t\t\t\tlabels : labelListDate,\r\n");
      out.write("\t\t\t\t\t\tdatasets : [{\r\n");
      out.write("\t\t\t\t\t\t\tlabel : '날짜별 접속자 수',\r\n");
      out.write("\t\t\t\t\t\t\tdata : valueListDate,\r\n");
      out.write("\t\t\t\t\t\t\tborderColor: 'rgba(155, 14, 255, 1)',\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor : 'rgba(155, 14, 255, 0.5)',\r\n");
      out.write("\t\t\t\t\t\t\tfill : true,\r\n");
      out.write("\t\t\t\t\t\t\tlineTension : 0\r\n");
      out.write("\t\t\t\t\t\t}]\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar dateOptions = {\r\n");
      out.write("\t\t\t\thover: {\r\n");
      out.write("\t\t\t\t\tmode: 'nearest',\r\n");
      out.write("\t\t\t\t\tintersect: true\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tscales: {\r\n");
      out.write("\t\t\t\t\txAxes: [{\r\n");
      out.write("\t\t\t\t\t\tdisplay: true,\r\n");
      out.write("\t\t\t\t\t\tscaleLabel: {\r\n");
      out.write("\t\t\t\t\t\t\tdisplay: true,\r\n");
      out.write("\t\t\t\t\t\t\tlabelString : '날짜'\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\tyAxes: [{\r\n");
      out.write("\t\t\t\t\t\tdisplay: true,\r\n");
      out.write("\t\t\t\t\t\tticks: {\r\n");
      out.write("\t\t\t\t\t\t\tsuggestedMin: 0,\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tscaleLabel:{\r\n");
      out.write("\t\t\t\t\t\t\tdisplay : true,\r\n");
      out.write("\t\t\t\t\t\t\tlabelString: '횟수'\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ctx5 = document.getElementById('logTimeTotalChart').getContext('2d');\r\n");
      out.write("\t\tnew Chart(ctx5, {\r\n");
      out.write("\t\t\ttype: 'line',\r\n");
      out.write("\t\t\tdata: data5,\r\n");
      out.write("\t\t\toptions: dateOptions\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t/* 토탈 타임 리스트 끝 */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 접속 경로별 시작 */\r\n");
      out.write("\t\tvar jsonDataRefer = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonRefer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\tvar jsonObjectRefer = JSON.stringify(jsonDataRefer);\r\n");
      out.write("\t\tvar jDataRefer = JSON.parse(jsonObjectRefer);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar labelListRefer = new Array();\r\n");
      out.write("\t\tvar valueListRefer = new Array();\r\n");
      out.write("\t\tvar colorListRefer = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i<jDataRefer.length; i++) {\r\n");
      out.write("\t\t\tvar r = jDataRefer[i];\r\n");
      out.write("\t\t\tlabelListRefer.push(r.Refer);\r\n");
      out.write("\t\t\tvalueListRefer.push(r.Count);\r\n");
      out.write("\t\t\tcolorListRefer.push(colorize());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data6 = {\r\n");
      out.write("\t\t\t\t\t\tlabels : labelListRefer,\r\n");
      out.write("\t\t\t\t\t\tdatasets: [{\r\n");
      out.write("\t\t\t\t\t\t\tlabel : '접속 횟수',\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor : colorListRefer,\r\n");
      out.write("\t\t\t\t\t\t\tdata : valueListRefer\r\n");
      out.write("\t\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\t\toptions : {\r\n");
      out.write("\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplay : true,\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : '접속 경로별 접속 횟수'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ctx6 = document.getElementById('logReferChart').getContext('2d');\r\n");
      out.write("\t\tnew Chart(ctx6, {\r\n");
      out.write("\t\t\ttype:'pie',\r\n");
      out.write("\t\t\tdata : data6\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t/* 접속 경로 로직 끝 */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 요일별 접속 로그 시작 */\r\n");
      out.write("\t\tvar jsonDataWeek = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonWeek}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\tvar jsonObjectWeek = JSON.stringify(jsonDataWeek);\r\n");
      out.write("\t\tvar jDataWeek = JSON.parse(jsonObjectWeek);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar labelListWeek = new Array();\r\n");
      out.write("\t\tvar valueListWeek = new Array();\r\n");
      out.write("\t\tvar colorListWeek = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i<jDataWeek.length; i++) {\r\n");
      out.write("\t\t\tvar w = jDataWeek[i];\r\n");
      out.write("\t\t\tlabelListWeek.push(w.WeekOfDays);\r\n");
      out.write("\t\t\tvalueListWeek.push(w.Count);\r\n");
      out.write("\t\t\tcolorListWeek.push(colorize());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data7 = {\r\n");
      out.write("\t\t\t\t\t\tlabels : labelListWeek,\r\n");
      out.write("\t\t\t\t\t\tdatasets: [{\r\n");
      out.write("\t\t\t\t\t\t\tlabel : '요일별 접속자 수',\r\n");
      out.write("\t\t\t\t\t\t\tdata : valueListWeek,\r\n");
      out.write("\t\t\t\t\t\t\tbackgroundColor: colorListWeek\r\n");
      out.write("\t\t\t\t\t\t}]\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ctx7 = document.getElementById('logWeekChart').getContext('2d');\r\n");
      out.write("\t\tnew Chart(ctx7, {\r\n");
      out.write("\t\t\ttype : 'bar',\r\n");
      out.write("\t\t\tdata : data7,\r\n");
      out.write("\t\t\toptions: {\r\n");
      out.write("\t\t\t\tscales: {\r\n");
      out.write("\t\t\t\t\tyAxes: [{\r\n");
      out.write("\t\t\t\t\t\tticks: {\r\n");
      out.write("\t\t\t\t\t\t\tbeginAtZero : true\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t/* 요일별 접속 로그 끝 */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 동적 버튼 생성\r\n");
      out.write("\t\tfunction getDateString(date) {\r\n");
      out.write("\t\t\treturn (date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction today() {\r\n");
      out.write("\t\t\tvar d = new Date();\r\n");
      out.write("\t\t\treturn getDateString(d);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction todayButton() {\r\n");
      out.write("\t\t\t$('#fromDate').val(today());\r\n");
      out.write("\t\t\t$('#toDate').val(today());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction yesterday() {\r\n");
      out.write("\t\t\tvar d = new Date();\r\n");
      out.write("\t\t\tvar yesterday = d.getTime() - (1*24*60*60*1000);\r\n");
      out.write("\t\t\td.setTime(yesterday);\r\n");
      out.write("\t\t\treturn getDateString(d);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction lastweek() {\r\n");
      out.write("\t\t\tvar d = new Date();\r\n");
      out.write("\t\t\tvar dayOfMonth = d.getDate();\r\n");
      out.write("\t\t\td.setDate(dayOfMonth - 7);\r\n");
      out.write("\t\t\treturn getDateString(d);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction lastMonth() {\r\n");
      out.write("\t\t\tvar d = new Date();\r\n");
      out.write("\t\t\tvar monthOfYear = d.getMonth();\r\n");
      out.write("\t\t\td.setMonth(monthOfYear - 1);\r\n");
      out.write("\t\t\treturn getDateString(d);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction lastYear() {\r\n");
      out.write("\t\t\tvar y = new Date();\r\n");
      out.write("\t\t\tvar year = y.getFullYear();\r\n");
      out.write("\t\t\ty.setFullYear(year - 1);\r\n");
      out.write("\t\t\treturn getDateString(y);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction yesterdayButton() {\r\n");
      out.write("\t\t\t$('#fromDate').val(yesterday());\r\n");
      out.write("\t\t\t$('#toDate').val(yesterday());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction lastWeekButton() {\r\n");
      out.write("\t\t\t$('#fromDate').val(lastweek());\r\n");
      out.write("\t\t\t$('#toDate').val(today());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction lastMonthButton() {\r\n");
      out.write("\t\t\t$('#fromDate').val(lastMonth());\r\n");
      out.write("\t\t\t$('#toDate').val(today());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction lastYearButton() {\r\n");
      out.write("\t\t\t$('#fromDate').val(lastYear());\r\n");
      out.write("\t\t\t$('#toDate').val(today());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#printing').click(function() {\r\n");
      out.write("\t\t\t$('#logTable').printThis();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/chart.jsp(128,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("log");
      // /WEB-INF/views/chart.jsp(128,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chart.jsp(128,5) '${logList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${logList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/chart.jsp(128,5) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t\t\t<th scope=\"row\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index + 1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</th>\r\n");
            out.write("\t\t\t\t\t\t\t<td><strong>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${log.log_userid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</strong></td>\r\n");
            out.write("\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${log.log_date }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${log.log_userip }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t<td><strong>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${log.log_userbrowser }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</strong></td>\r\n");
            out.write("\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${log.log_bversion }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t<td><strong>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${log.log_osversion }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</strong></td>\r\n");
            out.write("\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${log.log_userreferrer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t</tr>\r\n");
            out.write("\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
