package com.fusion1.service;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.fusion1.dao.ArticleVO;
import com.fusion1.dao.MultiBoardVO;
import com.fusion1.dao.PagenationVO;
import com.fusion1.dao.ReadNoticeVO;

@Service
public class MultiBoardServiceImpl implements MultiBoardService {
	
	@Resource(name="sqlSession")
	@Autowired
	SqlSession sqlSession;
	
	private static final String NAMESPACE = "multiBoardMapper";

	@Override
	public List<ArticleVO> getArticleListByBoardNo(MultiBoardVO multiVO) {
		return sqlSession.selectList(NAMESPACE + ".getArticleListByBoardNo", multiVO);
	}
	
	@Override
	public List<ArticleVO> getArticleListByBoardNo2(PagenationVO page) {
		return sqlSession.selectList(NAMESPACE + ".getArticleListByBoardNo2", page);
	}

	@Override
	public ArticleVO getArticleCountByBoardNo(MultiBoardVO multiVO) {
		return sqlSession.selectOne(NAMESPACE + ".getArticleCountByBoardNo", multiVO);
	}

	@Override
	public List<ArticleVO> getArticleSearchList(PagenationVO page) {
		return sqlSession.selectList(NAMESPACE + ".getArticleSearchList", page);
	}

	@Override
	public ArticleVO getArticleSearchCount(PagenationVO page) {
		return sqlSession.selectOne(NAMESPACE + ".getArticleSearchCount", page);
	}

	@Override
	public ArticleVO getArticleOne(int article_no) {
		return sqlSession.selectOne(NAMESPACE + ".getArticleOne", article_no);
	}

	@Override
	public int articleHitUpdate(int article_no) {
		return sqlSession.update(NAMESPACE + ".articleHitUpdate", article_no);
	}

	@Override
	public int articleDelete(ArticleVO articleVO) {
		return sqlSession.update(NAMESPACE + ".articleDelete", articleVO);
	}

	@Override
	public int articleUpdate(ArticleVO articleVO) {
		return sqlSession.update(NAMESPACE + ".articleUpdate", articleVO);
	}

	@Override
	public int articleInsert(ArticleVO articleVO) {
		throw new RuntimeException();
		//return sqlSession.insert(NAMESPACE + ".articleInsert", articleVO);
	}

	@Override
	public ArticleVO getPreventInsertedArticle() {
		return sqlSession.selectOne(NAMESPACE + ".getPreventInsertedArticle");
	}
	
	@Override
	public int articleParentsnoUpdate(int article_no) {
		return sqlSession.update(NAMESPACE + ".articleParentsnoUpdate", article_no);
	}

	@Override
	public int reWriteGroupOrder(ArticleVO articleVO) {
		return sqlSession.update(NAMESPACE + ".reWriteGroupOrder", articleVO);
	}

	@Override
	public int reArticleInsert(ArticleVO articleVO) {
		return sqlSession.insert(NAMESPACE + ".reArticleInsert", articleVO);
	}

	@Override
	public ArticleVO nonReadNoticeArticle(ReadNoticeVO read) {
		return sqlSession.selectOne(NAMESPACE + ".nonReadNoticeArticle", read);
	}

	@Override
	public ArticleVO nonReadNoticeArticleThisBoard(MultiBoardVO multiVO) {
		return sqlSession.selectOne(NAMESPACE + ".nonReadNoticeArticleThisBoard", multiVO);
	}

	@Override
	public int writeNoticeInfo(ReadNoticeVO read) {
		return sqlSession.insert(NAMESPACE + ".writeNoticeInfo", read);
	}

	@Override
	public List<ArticleVO> getNonReadNoticeList(MultiBoardVO multiVO) {
		return sqlSession.selectList(NAMESPACE + ".getNonReadNoticeList", multiVO);
	}

	@Override
	public int insertTraceLog(Map<String, Object> traceInfo) {
		//throw new RuntimeException();
		return sqlSession.insert(NAMESPACE + ".insertTraceLog", traceInfo);
	}
	
}
